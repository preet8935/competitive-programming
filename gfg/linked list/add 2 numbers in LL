struct Node* reverse(struct Node *head)
{
    Node* curr = head;
    Node* prev = NULL;
    Node* next = NULL;
    
    while(curr)
    {
        next = curr->next;
        
        curr->next = prev;
        
        prev = curr;
        
        curr = next;
    }
    head  = prev;
    
    return head;
}


struct Node* addTwoLists(struct Node* first, struct Node* second)
{
    // code here
    first = reverse(first);
    second = reverse(second);

    Node* result = NULL;
    Node* prev = NULL;
    Node* temp;
    
    int carry = 0;
    int sum = 0;
    
  
    while(first != NULL &&  second != NULL)
    {
        sum  = first->data + second->data + carry;
        carry = sum / 10;
        sum = sum % 10;
        
        temp = new Node(sum);
        
        if(!result)
            result = temp;
        else
            prev->next = temp;
        
        prev = temp;
        
        first = first->next;
        second = second->next;
    }
    
    
    while(first)
    {
        sum = first->data + carry;
        carry = sum / 10;
        sum = sum % 10;
        temp = new Node(sum);
        
        prev->next = temp;
        prev = temp;
        first = first->next;
    }
  
    while(second)
    {
        sum = second->data + carry;
        carry = sum / 10;
        sum = sum % 10;
        temp = new Node(sum);
        
        prev->next = temp;
        prev = temp;
        second = second->next;
    }
    
    if(carry > 0)
        temp->next = new Node(carry);
    
    result = reverse(result);
    return result;
}
